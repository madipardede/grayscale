/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grayscale;

import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author pardede
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblOriginialImage = new javax.swing.JLabel();
        lblGrayScaleImage = new javax.swing.JLabel();
        btnPilihGambar = new javax.swing.JButton();
        btnConvert = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));

        jPanel1.setBackground(new java.awt.Color(204, 51, 0));

        lblOriginialImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOriginialImage.setText("jLabel2");
        lblOriginialImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblGrayScaleImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGrayScaleImage.setText("jLabel2");
        lblGrayScaleImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnPilihGambar.setText("Pilih Gambar");
        btnPilihGambar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihGambarActionPerformed(evt);
            }
        });

        btnConvert.setText("Convert To Grayscale");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPilihGambar)
                    .addComponent(lblOriginialImage, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGrayScaleImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnConvert)
                        .addGap(0, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblOriginialImage, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(lblGrayScaleImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPilihGambar)
                    .addComponent(btnConvert))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    File fileImage = null;
    private void btnPilihGambarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihGambarActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            fileImage = fc.getSelectedFile();
            String sname = fileImage.getAbsolutePath(); //THIS WAS THE PROBLEM
            lblOriginialImage.setIcon(new ImageIcon(sname));
        }
    }//GEN-LAST:event_btnPilihGambarActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        try {
            // TODO add your handling code here:
            String extension = "";
            int i = fileImage.getAbsolutePath().lastIndexOf('.');
            if (i > 0) {
                extension = fileImage.getAbsolutePath().substring(i+1);
            }
            File newFile = new File(fileImage.getAbsolutePath()+"_grayScale."+extension); 
            BufferedImage in = ImageIO.read(fileImage);
            BufferedImage dest = rgb(in); 
            ImageIO.write( dest, "jpg", newFile);
            lblGrayScaleImage.setIcon(new ImageIcon(newFile.getAbsolutePath()));
            JOptionPane.showMessageDialog(null,"Gambar Hitam Putih terbuat di "+newFile.getAbsolutePath());
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConvertActionPerformed
    
    
   public BufferedImage rgb(BufferedImage src){
     BufferedImage dest = new BufferedImage(src.getWidth(),src.getHeight(), BufferedImage.TYPE_INT_RGB);
     //Gambar Pola
     int gray = 0;
     for (int y = 0; y < src.getHeight(); y++) {
          System.out.println("");
          for (int x = 0; x <src.getWidth(); x++) {
       
               int rgb = src.getRGB(x, y);
               // Merubah Warna Ke RGB
               System.out.print("signed Int"+rgb+",");
             // Signed Int adalah bilangan negative, signed int ada 3 macam ..apa itu , search ajah
               System.out.print("Unsigned Int"+Integer.toUnsignedString(rgb)+",");
               //Unsigned int adalah bilangan positive
               int red = rgb & 0x000000FF;
            
               int green = (rgb & 0x0000FF00) >> 8;
               int blue = (rgb & 0x00FF0000) >> 16;
               /*
Konsep Paham 1
               0x000000FF,0x0000FF00,0x00FF0000 adalah kode Hexa
               0x000000FF convert to desimal =255
               0x0000FF00 convert to desimal =65280
               0x00FF0000 convert to desimal =16711680
               
               Operator Matematika
               +,-,/,%...dst sampai operator bitWise seperti di bawah
               << disebut SHL atau Shift Left 
               >> disebut SHR atau Shift Right
               ^ disebut XOR atau Exclusive Or
               & disebut AND atau apa yah lupa... dan ada lagi , lupa, Search ajh Tentang Operator Bitwise
               
               Konsep hitung AND(&)
                    pada kasus diatas
                    int red = rgb & 0x000000FF;
                    misal didapat nilai rgb = -1238236(berdasarkan salah satu kordinat x,y pada gambar,
                                              -1238236 diambil dari sempel rgb merah),
                                              -1238236 Bilangan Signed Int(Search Ajah)
                                              jika di konversi ke unsigned int =
                                              4293729060
                    dan yang kita ketahui desimal dari hexa 0x000000FF adalah 255
                    
                    maka perhitungan & untuk red nya adalah
                    red =-1238236 & 255;
                    atau boleh red=4293729060 & 255
                    Sebelum dilakukan perhitungan &(AND)
                    Conversi dulu desimal ke biner
                    -1238236 atau 4293729060 binernya
                             11111111 11101101 00011011 00100100   
                             Note : Perlu diketahui bilangan integer adalah bilangan 32 bits atau 4 byte
                             1 byte = 8 bit, dan bisa diartikan Bilangan Int memakai memory sebesar 32bit/4Byte
                             Int juga memiliki length sepanjang 32
                             bisa dilihat dari banyaknya bilangan biner hasil konversi, berjumblah 32.....
                             visit : htp://www.binaryconvert.com
               
               ok, berarti di dapat biner dari -1238236(signed int)atau 4293729060(unsigned int) adalah
               11111111 11101101 00011011 00100100
               sekarang kita cari biner dari hexa 0x000000FF=255(Decimal)
               didapat
               00000000 00000000 00000000 11111111 
               
               perhitungan & nya
               
               11111111 11101101 00011011 00100100
               00000000 00000000 00000000 11111111
               ------------------------------------&
               00000000 00000000 00000000 00100100 convert to decimal = 36...
               berarti nilai dari variable red adalah 36;
               
Konsep Paham 2
               sekarang kita hitung
               int green = (rgb & 0x0000FF00) >> 8;
               
               ok cara konversinysa sama seperti diatas
               berarti langsung ajh ke perhitung &(AND) dari(rgb & 0x0000FF00) dan SHR Shift Right
               dari (rgb & 0x0000FF00) >> 8
               Singkat paham SHR merupakan Operator yang menggeser bit sebanyak n geseran ke kanan(diatas adalah bit ke-8,(rgb & 0x0000FF00) >>(n=8)),
               Nilai bit yang paling kiri akan berubah menjadi 0 dan bit yang kanan akan hilang karna pergesarn bit
               atau akan tergantikan dengan bit yang di kirinya...
               
               rgb=-1238236 atau 4293729060 konversi biner = 11111111 11101101 00011011 00100100
               0x0000FF00 konversi decimal =65280 konversi biner= 00000000 00000000 11111111 00000000
               
               hitung &
               11111111 11101101 00011011 00100100
               00000000 00000000 11111111 00000000
               ------------------------------------&
               00000000 00000000 00011011 00000000 conver to decimal = 6912
               dari 6912 didaipat lalu kita hitung SHR nya
               berarti 6912 >> 8 = 00000000 00000000 00000000 00011011 = 27
               
               berarti nilai variable green = 27 dan tadi sudah didapat nilai red = 36

konsep paham 3 
               kita hitung
               int blue = (rgb & 0x00FF0000) >> 16;
               sama hitungnya dari yang sebelumnya hanya Saja Sekarang SHR nya 16
               rgb=-1238236 atau 4293729060 konversi biner = 11111111 11101101 00011011 00100100
               0x00FF0000= 16711680 binernya 00000000 11111111 00000000 00000000
               
               hitung & nya
               11111111 11101101 00011011 00100100
               00000000 11111111 00000000 00000000
               -----------------------------------&
               00000000 11101101 00000000 00000000 = 15532032
               
               15532032 >> 16 = 00000000 00000000 00000000 11101101
               decimalnya = 237
               
               berarti  red = 36;
                       green= 27;
                       blue =237;
               
konsep paham 4
               mencari nilai avg(average) 
               (36+27+237)/3 =100 chek di matalb dengan imread(namagambar.jpg) 
               apakah pixel warna merah tersebut nilainya 100 klo salah berarti salah,hehehe
              
               lalu
               chek pada color pixel bisa di paint atau sejenisnya
               beri nilai red =36
                         green=27
                         blue =237
               tarraaa warnanya salah.....!!!
               tapi coba beri nilai warnanya ubah menjadi
                        red =237
                        green=36
                        blue=27
               
               pada dasarnya saya ikshsan fadly tidak dapat menentukan warna red,green dan bluenya,
               variable red,green,dan blue diatas hanya untuk penampungan perhitungan saja
               itu artinya bisa saja red yang kita hitung adalah warna hijau, dan yang lainnya pun begitu
               ;(PR=menentukan warnanya masing-masing);
               
               tapi dari sini kita tahu pada dasarnya nilai dari sebuah warna maksimalnya 
               adalah red=255, green=255, blue=255
               dan kita tahu apa bila nilai red=255, green=255, blue=255
               dengan avg =(255+255+255)/3=255;
               itu menunjukan bahwa warnanya adalah putih
               sedangkan jika red=0, green=0, blue=0 
               dengan avg =(0+0+0)/3=0; itu menunjukan bahwa warnanya adalah hitam
               
               jadi untuk menentukan warna hitam atau putih dapat disimpulkan
               apa bila hasil dari avg nya kecil maka warna tersebut mendekati hitam
               apa bila besar maka mendekati putih
               Note :Pola Tanda Tangan Itu Warna Hitam Kebanyakan dan Warna Putih Itu Backgroundnya
               Note :Sekalipun Polanya Warna Selain Hitam Jika Warnaya Terlihat Seperti Ada Opacity/Opaque
                     /Transparan/Agak-agak Muda Gitu maka hasil avg biasanya
                     lebih kecil dari 128(Pelajari Tentang Warna Agar Lebih Dekat Dengan Warna (:   )..
               
               
               
konsep paham 4
               untuk mengembalikannya ke warna awalnya bisa dengan
               int rgb =red+(green<<8)+(blue<<16)
               Note : <<(shift left) kebalikan dari >>(shift right)
               
               klo mau merubah warnanya 
               liat ajah di color pixel untuk macam-macam warnanya
               red nya, green nya, blue nya..
               lalu kita SHL << deh
               dan set deh ke Objek gambarnya yang sudah di deklarasikan dengan Objek BufferedImage
               berdasarkan kordinatnya...
               Note: Objek Lain ngga bisa
               
               
               (Tehnik ini juga dilakukan untuk image processing grayscale.. dll);
               
               Salam @ProFriends...!!! 
               
               */
               int avg = (red + green + blue) / 3;
               System.out.print("AVG "+avg+"-------");
               if(avg < 128){
                   
               gray = 255;
               int biner = gray+(gray<<8)+(gray<<16);
               dest.setRGB(x, y, biner);
               }
          }

     }
     
     return dest;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnPilihGambar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblGrayScaleImage;
    private javax.swing.JLabel lblOriginialImage;
    // End of variables declaration//GEN-END:variables
}
